{"mappings":"AAAA,IAAOA,YAAKA,GAAAA,EAAAA,EACT,GAAF,GAAA,KADWA,EAAAA,EAEP,KAAJ,GAAA,OAFWA,EAAAA,EAGP,KAAJ,GAAA,OAHWA,EAAAA,EAIN,MAAL,GAAA,SAJWA,IAAAA,EAAQ,KAWb,IAAIC,EAAS,CACnBC,QAASF,EAASG,GAClBC,UAAWJ,EAASK,KACpBC,UAAWN,EAASO,KACpBC,WAAYR,EAASS,OCTf,MAAMC,UCIN,MAENC,YAAYC,GACXC,KAAKD,SAAWA,EAEjBE,OAAOC,IACPC,KAAKD,EAAeE,IACpBC,oBAAoBC,IACpBC,kBAAkBD,MDLlBR,YACCU,EAAoB,CAAEC,EAAG,GAAIC,EAAG,KAChCC,EAAa,CAAEC,EAAG,GAAIC,EAAG,KAEzBC,MAAMN,GACNR,KAAKe,UAAYJ,EACjBX,KAAKgB,WAAa,MAClBhB,KAAKiB,WAAa,EAClBjB,KAAKkB,iBAAmB,EACxBlB,KAAKmB,YAAc/B,EAEpBa,OAAOC,GAENF,KAAKiB,WAA+B,GAAlBjB,KAAKiB,WAAmBjB,KAAKkB,iBAC/C,IAAIE,EAAgB,CACnBX,EAAGT,KAAKD,SAASU,EAAIT,KAAKiB,WAAaf,EACvCQ,EAAGV,KAAKD,SAASW,GE5BO,IAACX,GAAAA,EF8BVqB,GE5BPX,EAAI,MACbV,EAASU,EAAI,GACbV,EAASW,EAAI,MACbX,EAASW,EAAI,IF0BZV,KAAKD,SAAWqB,GAGlBjB,KAAKD,EAAeE,GACnBA,EAAIiB,UAAY,MAChBjB,EAAIkB,SACHtB,KAAKD,SAASU,EACdT,KAAKD,SAASW,EACdV,KAAKe,UAAUH,EACfZ,KAAKe,UAAUF,GAGjBR,oBAAoBC,GACnB,IAAIiB,EAAQvB,KAAKmB,YAAYb,GACzBiB,GAASpC,EAASO,KACrBM,KAAKkB,kBAAmB,EACdK,GAASpC,EAASS,QAC5BI,KAAKkB,iBAAmB,GAG1BX,kBAAkBD,GACjB,IAAIiB,EAAQvB,KAAKmB,YAAYb,IACzBiB,GAASpC,EAASS,OAEX2B,GAASpC,EAASO,QAD5BM,KAAKkB,iBAAmB,IGrD3BM,OAAOC,OAAS,KACfC,QAAQC,IAAI,SAEZ,MAAMC,EAASC,SAASC,eAAe,UACjC1B,EAAMwB,EAAOG,WAAW,MAExBC,EAAQ,IAAInC,EAElB,IAAIoC,EAAY,EAChB,MAAMC,EAAUC,IACf,MAAMjC,GAASiC,EAAOF,GAAa,IACnCA,EAAYE,EAEZH,EAAM/B,OAAOC,GACbE,EAAIgC,UAAU,EAAG,EAAGR,EAAOS,MAAOT,EAAOU,QACzCN,EAAM7B,KAAKD,EAAOE,GAElBoB,OAAOe,sBAAsBL,IAG9BL,SAASW,KAAKC,iBAAiB,WAAYC,IACtCV,EAAM3B,qBACT2B,EAAM3B,oBAAoBqC,EAAEpC,QAG9BuB,SAASW,KAAKC,iBAAiB,SAAUC,IACpCV,EAAMzB,mBACTyB,EAAMzB,kBAAkBmC,EAAEpC,QAI5BkB,OAAOe,sBAAsBL","sources":["src/utils/keyboardMap.ts","src/actors/Mario.ts","src/actors/Actor.ts","src/utils/checkLimits.ts","src/script.ts"],"sourcesContent":["export enum MarioKey {\n\tUP,\n\tDOWN,\n\tLEFT,\n\tRIGHT,\n}\n\nexport interface KeyboardMap {\n\t[key: string]: MarioKey;\n}\n\nexport let KEYMAP = {\n\tArrowUp: MarioKey.UP,\n\tArrowDown: MarioKey.DOWN,\n\tArrowLeft: MarioKey.LEFT,\n\tArrowRight: MarioKey.RIGHT,\n};\n","import { Point } from '../types/Point';\nimport { Size } from '../types/Size';\nimport { Actor } from './Actor';\nimport { checkLimits } from '../utils/checkLimits';\nimport { MarioKey, KeyboardMap, KEYMAP } from '../utils/keyboardMap';\n\nexport class Mario extends Actor {\n\tmarioSize: Size;\n\tmarioColor: string;\n\tmarioSpeed: number;\n\tmarioAceleration: number;\n\tkeyboardMap: KeyboardMap;\n\n\tconstructor(\n\t\tinitialPos: Point = { x: 10, y: 100 },\n\t\tsize: Size = { w: 30, h: 15 }\n\t) {\n\t\tsuper(initialPos);\n\t\tthis.marioSize = size;\n\t\tthis.marioColor = 'red';\n\t\tthis.marioSpeed = 0;\n\t\tthis.marioAceleration = 0;\n\t\tthis.keyboardMap = KEYMAP;\n\t}\n\tupdate(delta: number) {\n\t\t// Establecemos una velocidad en relación a la aceleración\n\t\tthis.marioSpeed = this.marioSpeed * 0.9 + this.marioAceleration;\n\t\tlet newPos: Point = {\n\t\t\tx: this.position.x + this.marioSpeed * delta,\n\t\t\ty: this.position.y,\n\t\t};\n\t\tif (checkLimits(newPos)) {\n\t\t\tthis.position = newPos;\n\t\t}\n\t}\n\tdraw(delta: number, ctx: CanvasRenderingContext2D) {\n\t\tctx.fillStyle = 'red';\n\t\tctx.fillRect(\n\t\t\tthis.position.x,\n\t\t\tthis.position.y,\n\t\t\tthis.marioSize.w,\n\t\t\tthis.marioSize.h\n\t\t);\n\t}\n\tkeyboard_event_down(key: string) {\n\t\tlet tecla = this.keyboardMap[key];\n\t\tif (tecla == MarioKey.LEFT) {\n\t\t\tthis.marioAceleration = -5;\n\t\t} else if (tecla == MarioKey.RIGHT) {\n\t\t\tthis.marioAceleration = 5;\n\t\t}\n\t}\n\tkeyboard_event_up(key: string) {\n\t\tlet tecla = this.keyboardMap[key];\n\t\tif (tecla == MarioKey.RIGHT) {\n\t\t\tthis.marioAceleration = 0;\n\t\t} else if (tecla == MarioKey.LEFT) {\n\t\t\tthis.marioAceleration = 0;\n\t\t}\n\t}\n}\n","import { Point } from '../types/Point';\n\nexport interface IActor {\n\tposition: Point;\n\tupdate: (delta: number) => void;\n\tdraw: (delta: number, ctx: CanvasRenderingContext2D) => void;\n\tkey_event_down: (key: string) => void;\n\tkey_event_up: (key: string) => void;\n}\n\nexport class Actor implements IActor {\n\tposition: Point;\n\tconstructor(position: Point) {\n\t\tthis.position = position;\n\t}\n\tupdate(delta: number) {}\n\tdraw(delta: number, ctx: CanvasRenderingContext2D) {}\n\tkeyboard_event_down(key: string) {}\n\tkeyboard_event_up(key: string) {}\n}\n","import { Point } from '../types/Point';\nexport const checkLimits = (position: Point) => {\n\tif (\n\t\tposition.x < 1020 &&\n\t\tposition.x > 0 &&\n\t\tposition.y < 1024 &&\n\t\tposition.y > 0\n\t) {\n\t\treturn true;\n\t}\n\treturn false;\n};\n","import { Mario } from './actors/Mario';\n\nwindow.onload = () => {\n\tconsole.log('ready');\n\n\tconst canvas = document.getElementById('canvas') as HTMLCanvasElement;\n\tconst ctx = canvas.getContext('2d') as CanvasRenderingContext2D;\n\n\tconst mario = new Mario();\n\n\tlet lastFrame = 0;\n\tconst render = (time: number) => {\n\t\tconst delta = (time - lastFrame) / 1000;\n\t\tlastFrame = time;\n\n\t\tmario.update(delta);\n\t\tctx.clearRect(0, 0, canvas.width, canvas.height);\n\t\tmario.draw(delta, ctx);\n\n\t\twindow.requestAnimationFrame(render);\n\t};\n\n\tdocument.body.addEventListener('keydown', (e) => {\n\t\tif (mario.keyboard_event_down) {\n\t\t\tmario.keyboard_event_down(e.key);\n\t\t}\n\t});\n\tdocument.body.addEventListener('keyup', (e) => {\n\t\tif (mario.keyboard_event_up) {\n\t\t\tmario.keyboard_event_up(e.key);\n\t\t}\n\t});\n\n\twindow.requestAnimationFrame(render);\n};\n"],"names":["$45ecd8466228168a$export$931f1d909de3dad0","$45ecd8466228168a$export$194e66e3e22b15bb","ArrowUp","UP","ArrowDown","DOWN","ArrowLeft","LEFT","ArrowRight","RIGHT","$f9f6af20bd5a23c3$export$fc975b129559c2d","constructor","position","this","update","delta","draw","ctx","keyboard_event_down","key","keyboard_event_up","initialPos","x","y","size","w","h","super","marioSize","marioColor","marioSpeed","marioAceleration","keyboardMap","newPos","fillStyle","fillRect","tecla","window","onload","console","log","canvas","document","getElementById","getContext","mario","lastFrame","render","time","clearRect","width","height","requestAnimationFrame","body","addEventListener","e"],"version":3,"file":"index.4f8093f9.js.map"}